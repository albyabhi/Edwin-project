{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alby4\\\\Desktop\\\\New folder (2)\\\\09-03-24-front-end-master\\\\src\\\\components\\\\Home\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// CartContext.js\n\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define the initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cartItems: [],\n  favoriteItems: []\n};\n\n// Create a context\nconst CartContext = /*#__PURE__*/createContext();\n\n// Create a reducer function to handle state changes\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.payload]\n      };\n    case 'ADD_TO_FAVORITES':\n      return {\n        ...state,\n        favoriteItems: [...state.favoriteItems, action.payload]\n      };\n    case 'LOAD_CART_ITEMS':\n      return {\n        ...state,\n        cartItems: action.payload\n      };\n    // Add more cases for other actions if needed\n    default:\n      return state;\n  }\n};\n\n// Create a CartProvider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart items from MongoDB on component mount\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/cart/cart');\n        dispatch({\n          type: 'LOAD_CART_ITEMS',\n          payload: response.data\n        });\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n    fetchCartItems();\n  }, []);\n\n  // Function to add items to the cart\n  const addToCart = async item => {\n    try {\n      dispatch({\n        type: 'ADD_TO_CART',\n        payload: item\n      });\n\n      // Send the item data to the server\n      await axios.post('http://localhost:4000/cart/cart', item);\n      console.log('Item added to the cart on the server');\n    } catch (error) {\n      console.error('Error adding item to the cart:', error);\n    }\n  };\n\n  // Function to add items to favorites\n  const addToFavorites = item => {\n    dispatch({\n      type: 'ADD_TO_FAVORITES',\n      payload: item\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      state,\n      addToCart,\n      addToFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the cart context\n_s(CartProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","initialState","cartItems","favoriteItems","CartContext","cartReducer","state","action","type","payload","CartProvider","children","_s","dispatch","fetchCartItems","response","get","data","error","console","addToCart","item","post","log","addToFavorites","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Alby4/Desktop/New folder (2)/09-03-24-front-end-master/src/components/Home/CartContext.jsx"],"sourcesContent":["// CartContext.js\n\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define the initial state\nconst initialState = {\n  cartItems: [],\n  favoriteItems: [],\n};\n\n// Create a context\nconst CartContext = createContext();\n\n// Create a reducer function to handle state changes\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.payload],\n      };\n    case 'ADD_TO_FAVORITES':\n      return {\n        ...state,\n        favoriteItems: [...state.favoriteItems, action.payload],\n      };\n    case 'LOAD_CART_ITEMS':\n      return {\n        ...state,\n        cartItems: action.payload,\n      };\n    // Add more cases for other actions if needed\n    default:\n      return state;\n  }\n};\n\n// Create a CartProvider component\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart items from MongoDB on component mount\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/cart/cart');\n        dispatch({ type: 'LOAD_CART_ITEMS', payload: response.data });\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n\n    fetchCartItems();\n  }, []);\n\n  // Function to add items to the cart\n  const addToCart = async (item) => {\n    try {\n      dispatch({ type: 'ADD_TO_CART', payload: item });\n\n      // Send the item data to the server\n      await axios.post('http://localhost:4000/cart/cart', item);\n      console.log('Item added to the cart on the server');\n    } catch (error) {\n      console.error('Error adding item to the cart:', error);\n    }\n  };\n\n  // Function to add items to favorites\n  const addToFavorites = (item) => {\n    dispatch({ type: 'ADD_TO_FAVORITES', payload: item });\n  };\n\n  return (\n    <CartContext.Provider value={{ state, addToCart, addToFavorites }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n// Create a custom hook to use the cart context\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}